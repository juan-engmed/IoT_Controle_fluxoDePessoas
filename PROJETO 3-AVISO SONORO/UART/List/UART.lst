
AVRASM ver. 2.1.30  C:\Users\Filipe\Desktop\PROJETO3\UART\List\UART.asm Sat Mar 06 10:23:39 2021

C:\Users\Filipe\Desktop\PROJETO3\UART\List\UART.asm(1081): warning: Register r4 already defined by the .DEF directive
C:\Users\Filipe\Desktop\PROJETO3\UART\List\UART.asm(1082): warning: Register r5 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.43 
                 ;(C) Copyright 1998-2021 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Release
                 ;Chip type              : ATmega8
                 ;Program type           : Application
                 ;Clock frequency        : 14,745600 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 1
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	RCALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	RCALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _cont=R4
                 	.DEF _cont_msb=R5
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c038      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 cff6      	RJMP 0x00
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
                 
                 _tbl10_G100:
000013 2710
000014 03e8
000015 0064
000016 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000017 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000018 1000
000019 0100
00001a 0010
00001b 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
00001c 754e
00001d 656d
00001e 6f72
00001f 6420      	.DB  0x4E,0x75,0x6D,0x65,0x72,0x6F,0x20,0x64
000020 2065
000021 6570
000022 7373
000023 616f      	.DB  0x65,0x20,0x70,0x65,0x73,0x73,0x6F,0x61
000024 2073
000025 6f6e
000026 6920
000027 746e      	.DB  0x73,0x20,0x6E,0x6F,0x20,0x69,0x6E,0x74
000028 7265
000029 6f69
00002a 3a72
00002b 3d20      	.DB  0x65,0x72,0x69,0x6F,0x72,0x3A,0x20,0x3D
00002c 2520
00002d 2e64
00002e 0a0d
00002f 4100      	.DB  0x20,0x25,0x64,0x2E,0xD,0xA,0x0,0x41
000030 626d
000031 6569
000032 746e
000033 2065      	.DB  0x6D,0x62,0x69,0x65,0x6E,0x74,0x65,0x20
000034 6176
000035 697a
000036 206f
000037 0a0d      	.DB  0x76,0x61,0x7A,0x69,0x6F,0x20,0xD,0xA
C:\Users\Filipe\Desktop\PROJETO3\UART\List\UART.asm(1125): warning: .cseg .db misalignment - padding zero byte
000038 0000      	.DB  0x0
                 __RESET:
000039 94f8      	CLI
00003a 27ee      	CLR  R30
00003b bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00003c e0f1      	LDI  R31,1
00003d bffb      	OUT  GICR,R31
00003e bfeb      	OUT  GICR,R30
00003f bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000040 e1f8      	LDI  R31,0x18
000041 bdf1      	OUT  WDTCR,R31
000042 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000043 e08d      	LDI  R24,(14-2)+1
000044 e0a2      	LDI  R26,2
000045 27bb      	CLR  R27
                 __CLEAR_REG:
000046 93ed      	ST   X+,R30
000047 958a      	DEC  R24
000048 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000049 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00004a e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00004b e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00004c 93ed      	ST   X+,R30
00004d 9701      	SBIW R24,1
00004e f7e9      	BRNE __CLEAR_SRAM
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00004f e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000050 bfed      	OUT  SPL,R30
000051 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000052 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000053 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000054 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000055 c000      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;void main(void)
                 ; 0000 0026 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0027 // Declare your local variables here
                 ; 0000 0028 cont = 0;
000056 2444      	CLR  R4
000057 2455      	CLR  R5
                 ; 0000 0029 
                 ; 0000 002A // Input/Output Ports initialization
                 ; 0000 002B // Port B initialization
                 ; 0000 002C // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 002D // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 002E PORTB=0x00;
000058 e0e0      	LDI  R30,LOW(0)
000059 bbe8      	OUT  0x18,R30
                 ; 0000 002F DDRB=0x02;
00005a e0e2      	LDI  R30,LOW(2)
00005b bbe7      	OUT  0x17,R30
                 ; 0000 0030 
                 ; 0000 0031 // Port C initialization
                 ; 0000 0032 // Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 0033 // State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 0034 PORTC=0x00;
00005c e0e0      	LDI  R30,LOW(0)
00005d bbe5      	OUT  0x15,R30
                 ; 0000 0035 DDRC=0x02;
00005e e0e2      	LDI  R30,LOW(2)
00005f bbe4      	OUT  0x14,R30
                 ; 0000 0036 
                 ; 0000 0037 // Port D initialization
                 ; 0000 0038 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 0039 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 003A PORTD=0x00;
000060 e0e0      	LDI  R30,LOW(0)
000061 bbe2      	OUT  0x12,R30
                 ; 0000 003B DDRD=0x00;
000062 bbe1      	OUT  0x11,R30
                 ; 0000 003C 
                 ; 0000 003D // Timer/Counter 0 initialization
                 ; 0000 003E // Clock source: System Clock
                 ; 0000 003F // Clock value: Timer 0 Stopped
                 ; 0000 0040 TCCR0=0x00;
000063 bfe3      	OUT  0x33,R30
                 ; 0000 0041 TCNT0=0x00;
000064 bfe2      	OUT  0x32,R30
                 ; 0000 0042 
                 ; 0000 0043 // Timer/Counter 1 initialization
                 ; 0000 0044 // Clock source: System Clock
                 ; 0000 0045 // Clock value: Timer1 Stopped
                 ; 0000 0046 // Mode: Normal top=0xFFFF
                 ; 0000 0047 // OC1A output: Discon.
                 ; 0000 0048 // OC1B output: Discon.
                 ; 0000 0049 // Noise Canceler: Off
                 ; 0000 004A // Input Capture on Falling Edge
                 ; 0000 004B // Timer1 Overflow Interrupt: Off
                 ; 0000 004C // Input Capture Interrupt: Off
                 ; 0000 004D // Compare A Match Interrupt: Off
                 ; 0000 004E // Compare B Match Interrupt: Off
                 ; 0000 004F TCCR1A=0x00;
000065 bdef      	OUT  0x2F,R30
                 ; 0000 0050 TCCR1B=0x00;
000066 bdee      	OUT  0x2E,R30
                 ; 0000 0051 TCNT1H=0x00;
000067 bded      	OUT  0x2D,R30
                 ; 0000 0052 TCNT1L=0x00;
000068 bdec      	OUT  0x2C,R30
                 ; 0000 0053 ICR1H=0x00;
000069 bde7      	OUT  0x27,R30
                 ; 0000 0054 ICR1L=0x00;
00006a bde6      	OUT  0x26,R30
                 ; 0000 0055 OCR1AH=0x00;
00006b bdeb      	OUT  0x2B,R30
                 ; 0000 0056 OCR1AL=0x00;
00006c bdea      	OUT  0x2A,R30
                 ; 0000 0057 OCR1BH=0x00;
00006d bde9      	OUT  0x29,R30
                 ; 0000 0058 OCR1BL=0x00;
00006e bde8      	OUT  0x28,R30
                 ; 0000 0059 
                 ; 0000 005A // Timer/Counter 2 initialization
                 ; 0000 005B // Clock source: System Clock
                 ; 0000 005C // Clock value: Timer2 Stopped
                 ; 0000 005D // Mode: Normal top=0xFF
                 ; 0000 005E // OC2 output: Disconnected
                 ; 0000 005F ASSR=0x00;
00006f bde2      	OUT  0x22,R30
                 ; 0000 0060 TCCR2=0x00;
000070 bde5      	OUT  0x25,R30
                 ; 0000 0061 TCNT2=0x00;
000071 bde4      	OUT  0x24,R30
                 ; 0000 0062 OCR2=0x00;
000072 bde3      	OUT  0x23,R30
                 ; 0000 0063 
                 ; 0000 0064 // External Interrupt(s) initialization
                 ; 0000 0065 // INT0: Off
                 ; 0000 0066 // INT1: Off
                 ; 0000 0067 MCUCR=0x00;
000073 bfe5      	OUT  0x35,R30
                 ; 0000 0068 
                 ; 0000 0069 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 006A TIMSK=0x00;
000074 bfe9      	OUT  0x39,R30
                 ; 0000 006B 
                 ; 0000 006C // USART initialization
                 ; 0000 006D // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 006E // USART Receiver: Off
                 ; 0000 006F // USART Transmitter: On
                 ; 0000 0070 // USART Mode: Asynchronous
                 ; 0000 0071 // USART Baud Rate: 19200
                 ; 0000 0072 UCSRA=0x00;
000075 b9eb      	OUT  0xB,R30
                 ; 0000 0073 UCSRB=0x08;
000076 e0e8      	LDI  R30,LOW(8)
000077 b9ea      	OUT  0xA,R30
                 ; 0000 0074 UCSRC=0x86;
000078 e8e6      	LDI  R30,LOW(134)
000079 bde0      	OUT  0x20,R30
                 ; 0000 0075 UBRRH=0x00;
00007a e0e0      	LDI  R30,LOW(0)
00007b bde0      	OUT  0x20,R30
                 ; 0000 0076 UBRRL=0x2F;
00007c e2ef      	LDI  R30,LOW(47)
00007d b9e9      	OUT  0x9,R30
                 ; 0000 0077 
                 ; 0000 0078 // Analog Comparator initialization
                 ; 0000 0079 // Analog Comparator: Off
                 ; 0000 007A // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0000 007B ACSR=0x80;
00007e e8e0      	LDI  R30,LOW(128)
00007f b9e8      	OUT  0x8,R30
                 ; 0000 007C SFIOR=0x00;
000080 e0e0      	LDI  R30,LOW(0)
000081 bfe0      	OUT  0x30,R30
                 ; 0000 007D 
                 ; 0000 007E // ADC initialization
                 ; 0000 007F // ADC disabled
                 ; 0000 0080 ADCSRA=0x00;
000082 b9e6      	OUT  0x6,R30
                 ; 0000 0081 
                 ; 0000 0082 // SPI initialization
                 ; 0000 0083 // SPI disabled
                 ; 0000 0084 SPCR=0x00;
000083 b9ed      	OUT  0xD,R30
                 ; 0000 0085 
                 ; 0000 0086 // TWI initialization
                 ; 0000 0087 // TWI disabled
                 ; 0000 0088 TWCR=0x00;
000084 bfe6      	OUT  0x36,R30
                 ; 0000 0089 
                 ; 0000 008A while (1)
                 _0x3:
                 ; 0000 008B {
                 ; 0000 008C // Place your code here
                 ; 0000 008D if (PIND.1)
000085 9b81      	SBIS 0x10,1
000086 c003      	RJMP _0x6
                 ; 0000 008E {
                 ; 0000 008F cont = cont + 1;
000087 01f2      	MOVW R30,R4
000088 9631      	ADIW R30,1
000089 d19e      	RCALL SUBOPT_0x0
                 ; 0000 0090 printf("Numero de pessoas no interior: = %d.\r\n",cont);
                 ; 0000 0091 
                 ; 0000 0092 };
                 _0x6:
                 ; 0000 0093 
                 ; 0000 0094 delay_ms(500); // Aguarda 500 milisegundos
00008a efa4      	LDI  R26,LOW(500)
00008b e0b1      	LDI  R27,HIGH(500)
00008c d1fa      	RCALL _delay_ms
                 ; 0000 0095 
                 ; 0000 0096 if (PIND.2)
00008d 9b82      	SBIS 0x10,2
00008e c00e      	RJMP _0x7
                 ; 0000 0097 {
                 ; 0000 0098 if(cont == 0)
00008f 2c04      	MOV  R0,R4
000090 2805      	OR   R0,R5
000091 f441      	BRNE _0x8
                 ; 0000 0099 {
                 ; 0000 009A printf("Ambiente vazio \r\n");
                +
000092 e5ef     +LDI R30 , LOW ( 2 * _0x0 + ( 39 ) )
000093 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 39 ) )
                 	__POINTW1FN _0x0,39
000094 93fa      	ST   -Y,R31
000095 93ea      	ST   -Y,R30
000096 e080      	LDI  R24,0
000097 d159      	RCALL _printf
000098 9622      	ADIW R28,2
                 ; 0000 009B }
                 ; 0000 009C 
                 ; 0000 009D else
000099 c003      	RJMP _0x9
                 _0x8:
                 ; 0000 009E {
                 ; 0000 009F cont = cont - 1;
00009a 01f2      	MOVW R30,R4
00009b 9731      	SBIW R30,1
00009c d18b      	RCALL SUBOPT_0x0
                 ; 0000 00A0 printf("Numero de pessoas no interior: = %d.\r\n",cont);
                 ; 0000 00A1 }
                 _0x9:
                 ; 0000 00A2 
                 ; 0000 00A3 
                 ; 0000 00A4 };
                 _0x7:
                 ; 0000 00A5 
                 ; 0000 00A6 
                 ; 0000 00A7 while(cont==5)
00009d e0e5      	LDI  R30,LOW(5)
00009e e0f0      	LDI  R31,HIGH(5)
00009f 15e4      	CP   R30,R4
0000a0 05f5      	CPC  R31,R5
0000a1 f441      	BRNE _0xC
                 ; 0000 00A8 {
                 ; 0000 00A9 PORTC.1=~PORTC.1;
0000a2 9ba9      	SBIS 0x15,1
0000a3 c002      	RJMP _0xD
0000a4 98a9      	CBI  0x15,1
0000a5 c001      	RJMP _0xE
                 _0xD:
0000a6 9aa9      	SBI  0x15,1
                 _0xE:
                 ; 0000 00AA delay_ms(500);
0000a7 efa4      	LDI  R26,LOW(500)
0000a8 e0b1      	LDI  R27,HIGH(500)
0000a9 d1dd      	RCALL _delay_ms
                 ; 0000 00AB 
                 ; 0000 00AC break;
                 ; 0000 00AD }
                 _0xC:
                 ; 0000 00AE 
                 ; 0000 00AF while(cont==6)
0000aa e0e6      	LDI  R30,LOW(6)
0000ab e0f0      	LDI  R31,HIGH(6)
0000ac 15e4      	CP   R30,R4
0000ad 05f5      	CPC  R31,R5
0000ae f441      	BRNE _0x11
                 ; 0000 00B0 {
                 ; 0000 00B1 PORTC.1=~PORTC.1;
0000af 9ba9      	SBIS 0x15,1
0000b0 c002      	RJMP _0x12
0000b1 98a9      	CBI  0x15,1
0000b2 c001      	RJMP _0x13
                 _0x12:
0000b3 9aa9      	SBI  0x15,1
                 _0x13:
                 ; 0000 00B2 delay_ms(150);
0000b4 e9a6      	LDI  R26,LOW(150)
0000b5 e0b0      	LDI  R27,0
0000b6 d1d0      	RCALL _delay_ms
                 ; 0000 00B3 
                 ; 0000 00B4 
                 ; 0000 00B5 break;
                 ; 0000 00B6 }
                 _0x11:
                 ; 0000 00B7 
                 ; 0000 00B8 
                 ; 0000 00B9 while(cont >= 7)
0000b7 e0e7      	LDI  R30,LOW(7)
0000b8 e0f0      	LDI  R31,HIGH(7)
0000b9 164e      	CP   R4,R30
0000ba 065f      	CPC  R5,R31
0000bb f024      	BRLT _0x16
                 ; 0000 00BA {
                 ; 0000 00BB PORTC.1=1;
0000bc 9aa9      	SBI  0x15,1
                 ; 0000 00BC delay_ms(10);
0000bd e0aa      	LDI  R26,LOW(10)
0000be e0b0      	LDI  R27,0
0000bf d1c7      	RCALL _delay_ms
                 ; 0000 00BD 
                 ; 0000 00BE 
                 ; 0000 00BF break;
                 ; 0000 00C0 }
                 _0x16:
                 ; 0000 00C1 
                 ; 0000 00C2 
                 ; 0000 00C3 } //while
0000c0 cfc4      	RJMP _0x3
                 ; 0000 00C4 }
                 _0x19:
0000c1 cfff      	RJMP _0x19
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
                 ; .FSTART _putchar
0000c2 93aa      	ST   -Y,R26
                 putchar0:
0000c3 9b5d           sbis usr,udre
0000c4 cffe           rjmp putchar0
0000c5 81e8           ld   r30,y
0000c6 b9ec           out  udr,r30
0000c7 9621      	ADIW R28,1
0000c8 9508      	RET
                 ; .FEND
                 _put_usart_G100:
                 ; .FSTART _put_usart_G100
0000c9 d16a      	RCALL SUBOPT_0x1
0000ca 81aa      	LDD  R26,Y+2
0000cb dff6      	RCALL _putchar
0000cc 81a8      	LD   R26,Y
0000cd 81b9      	LDD  R27,Y+1
0000ce d168      	RCALL SUBOPT_0x2
0000cf 9631      	ADIW R30,1
0000d0 93fe      	ST   -X,R31
0000d1 93ee      	ST   -X,R30
0000d2 9623      	ADIW R28,3
0000d3 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0000d4 d15f      	RCALL SUBOPT_0x1
0000d5 9726      	SBIW R28,6
0000d6 d188      	RCALL __SAVELOCR6
0000d7 e010      	LDI  R17,0
0000d8 85ac      	LDD  R26,Y+12
0000d9 85bd      	LDD  R27,Y+12+1
0000da e0e0      	LDI  R30,LOW(0)
0000db e0f0      	LDI  R31,HIGH(0)
0000dc 93ed      	ST   X+,R30
0000dd 93fc      	ST   X,R31
                 _0x2000016:
0000de 89ea      	LDD  R30,Y+18
0000df 89fb      	LDD  R31,Y+18+1
0000e0 9631      	ADIW R30,1
0000e1 8bea      	STD  Y+18,R30
0000e2 8bfb      	STD  Y+18+1,R31
0000e3 9731      	SBIW R30,1
0000e4 91e4      	LPM  R30,Z
0000e5 2f2e      	MOV  R18,R30
0000e6 30e0      	CPI  R30,0
0000e7 f409      	BRNE PC+2
0000e8 c102      	RJMP _0x2000018
0000e9 2fe1      	MOV  R30,R17
0000ea 30e0      	CPI  R30,0
0000eb f431      	BRNE _0x200001C
0000ec 3225      	CPI  R18,37
0000ed f411      	BRNE _0x200001D
0000ee e011      	LDI  R17,LOW(1)
0000ef c001      	RJMP _0x200001E
                 _0x200001D:
0000f0 d149      	RCALL SUBOPT_0x3
                 _0x200001E:
0000f1 c0f8      	RJMP _0x200001B
                 _0x200001C:
0000f2 30e1      	CPI  R30,LOW(0x1)
0000f3 f4a1      	BRNE _0x200001F
0000f4 3225      	CPI  R18,37
0000f5 f411      	BRNE _0x2000020
0000f6 d143      	RCALL SUBOPT_0x3
0000f7 c0f1      	RJMP _0x20000CC
                 _0x2000020:
0000f8 e012      	LDI  R17,LOW(2)
0000f9 e040      	LDI  R20,LOW(0)
0000fa e000      	LDI  R16,LOW(0)
0000fb 322d      	CPI  R18,45
0000fc f411      	BRNE _0x2000021
0000fd e001      	LDI  R16,LOW(1)
0000fe c0eb      	RJMP _0x200001B
                 _0x2000021:
0000ff 322b      	CPI  R18,43
000100 f411      	BRNE _0x2000022
000101 e24b      	LDI  R20,LOW(43)
000102 c0e7      	RJMP _0x200001B
                 _0x2000022:
000103 3220      	CPI  R18,32
000104 f411      	BRNE _0x2000023
000105 e240      	LDI  R20,LOW(32)
000106 c0e3      	RJMP _0x200001B
                 _0x2000023:
000107 c002      	RJMP _0x2000024
                 _0x200001F:
000108 30e2      	CPI  R30,LOW(0x2)
000109 f439      	BRNE _0x2000025
                 _0x2000024:
00010a e050      	LDI  R21,LOW(0)
00010b e013      	LDI  R17,LOW(3)
00010c 3320      	CPI  R18,48
00010d f411      	BRNE _0x2000026
00010e 6800      	ORI  R16,LOW(128)
00010f c0da      	RJMP _0x200001B
                 _0x2000026:
000110 c003      	RJMP _0x2000027
                 _0x2000025:
000111 30e3      	CPI  R30,LOW(0x3)
000112 f009      	BREQ PC+2
000113 c0d6      	RJMP _0x200001B
                 _0x2000027:
000114 3320      	CPI  R18,48
000115 f010      	BRLO _0x200002A
000116 332a      	CPI  R18,58
000117 f008      	BRLO _0x200002B
                 _0x200002A:
000118 c007      	RJMP _0x2000029
                 _0x200002B:
000119 e0aa      	LDI  R26,LOW(10)
00011a 9f5a      	MUL  R21,R26
00011b 2d50      	MOV  R21,R0
00011c 2fe2      	MOV  R30,R18
00011d 53e0      	SUBI R30,LOW(48)
00011e 0f5e      	ADD  R21,R30
00011f c0ca      	RJMP _0x200001B
                 _0x2000029:
000120 2fe2      	MOV  R30,R18
000121 36e3      	CPI  R30,LOW(0x63)
000122 f439      	BRNE _0x200002F
000123 d11d      	RCALL SUBOPT_0x4
000124 d11f      	RCALL SUBOPT_0x5
000125 d11b      	RCALL SUBOPT_0x4
000126 81a4      	LDD  R26,Z+4
000127 93aa      	ST   -Y,R26
000128 d11f      	RCALL SUBOPT_0x6
000129 c0bf      	RJMP _0x2000030
                 _0x200002F:
00012a 37e3      	CPI  R30,LOW(0x73)
00012b f429      	BRNE _0x2000032
00012c d121      	RCALL SUBOPT_0x7
00012d d122      	RCALL SUBOPT_0x8
00012e d0e2      	RCALL _strlen
00012f 2f1e      	MOV  R17,R30
000130 c007      	RJMP _0x2000033
                 _0x2000032:
000131 37e0      	CPI  R30,LOW(0x70)
000132 f449      	BRNE _0x2000035
000133 d11a      	RCALL SUBOPT_0x7
000134 d11b      	RCALL SUBOPT_0x8
000135 d0e6      	RCALL _strlenf
000136 2f1e      	MOV  R17,R30
000137 6008      	ORI  R16,LOW(8)
                 _0x2000033:
000138 6002      	ORI  R16,LOW(2)
000139 770f      	ANDI R16,LOW(127)
00013a e030      	LDI  R19,LOW(0)
00013b c034      	RJMP _0x2000036
                 _0x2000035:
00013c 36e4      	CPI  R30,LOW(0x64)
00013d f011      	BREQ _0x2000039
00013e 36e9      	CPI  R30,LOW(0x69)
00013f f411      	BRNE _0x200003A
                 _0x2000039:
000140 6004      	ORI  R16,LOW(4)
000141 c002      	RJMP _0x200003B
                 _0x200003A:
000142 37e5      	CPI  R30,LOW(0x75)
000143 f429      	BRNE _0x200003C
                 _0x200003B:
000144 e2e6      	LDI  R30,LOW(_tbl10_G100*2)
000145 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000146 d112      	RCALL SUBOPT_0x9
000147 e015      	LDI  R17,LOW(5)
000148 c00b      	RJMP _0x200003D
                 _0x200003C:
000149 35e8      	CPI  R30,LOW(0x58)
00014a f411      	BRNE _0x200003F
00014b 6008      	ORI  R16,LOW(8)
00014c c003      	RJMP _0x2000040
                 _0x200003F:
00014d 37e8      	CPI  R30,LOW(0x78)
00014e f009      	BREQ PC+2
00014f c099      	RJMP _0x2000071
                 _0x2000040:
000150 e3e0      	LDI  R30,LOW(_tbl16_G100*2)
000151 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
000152 d106      	RCALL SUBOPT_0x9
000153 e014      	LDI  R17,LOW(4)
                 _0x200003D:
000154 ff02      	SBRS R16,2
000155 c014      	RJMP _0x2000042
000156 d0f7      	RCALL SUBOPT_0x7
000157 89a8      	LDD  R26,Y+16
000158 89b9      	LDD  R27,Y+16+1
000159 9614      	ADIW R26,4
00015a d0dc      	RCALL SUBOPT_0x2
00015b d100      	RCALL SUBOPT_0xA
00015c 85ab      	LDD  R26,Y+11
00015d 23aa      	TST  R26
00015e f42a      	BRPL _0x2000043
00015f 85ea      	LDD  R30,Y+10
000160 85fb      	LDD  R31,Y+10+1
000161 d10f      	RCALL __ANEGW1
000162 d0f9      	RCALL SUBOPT_0xA
000163 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
000164 3040      	CPI  R20,0
000165 f011      	BREQ _0x2000044
000166 5f1f      	SUBI R17,-LOW(1)
000167 c001      	RJMP _0x2000045
                 _0x2000044:
000168 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
000169 c006      	RJMP _0x2000046
                 _0x2000042:
00016a d0e3      	RCALL SUBOPT_0x7
00016b 89a8      	LDD  R26,Y+16
00016c 89b9      	LDD  R27,Y+16+1
00016d 9614      	ADIW R26,4
00016e d10b      	RCALL __GETW1P
00016f d0ec      	RCALL SUBOPT_0xA
                 _0x2000046:
                 _0x2000036:
000170 fd00      	SBRC R16,0
000171 c010      	RJMP _0x2000047
                 _0x2000048:
000172 1715      	CP   R17,R21
000173 f470      	BRSH _0x200004A
000174 ff07      	SBRS R16,7
000175 c008      	RJMP _0x200004B
000176 ff02      	SBRS R16,2
000177 c004      	RJMP _0x200004C
000178 7f0b      	ANDI R16,LOW(251)
000179 2f24      	MOV  R18,R20
00017a 5011      	SUBI R17,LOW(1)
00017b c001      	RJMP _0x200004D
                 _0x200004C:
00017c e320      	LDI  R18,LOW(48)
                 _0x200004D:
00017d c001      	RJMP _0x200004E
                 _0x200004B:
00017e e220      	LDI  R18,LOW(32)
                 _0x200004E:
00017f d0ba      	RCALL SUBOPT_0x3
000180 5051      	SUBI R21,LOW(1)
000181 cff0      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
000182 2f31      	MOV  R19,R17
000183 ff01      	SBRS R16,1
000184 c015      	RJMP _0x200004F
                 _0x2000050:
000185 3030      	CPI  R19,0
000186 f091      	BREQ _0x2000052
000187 ff03      	SBRS R16,3
000188 c005      	RJMP _0x2000053
000189 81ee      	LDD  R30,Y+6
00018a 81ff      	LDD  R31,Y+6+1
00018b 9125      	LPM  R18,Z+
00018c d0cc      	RCALL SUBOPT_0x9
00018d c005      	RJMP _0x2000054
                 _0x2000053:
00018e 81ae      	LDD  R26,Y+6
00018f 81bf      	LDD  R27,Y+6+1
000190 912d      	LD   R18,X+
000191 83ae      	STD  Y+6,R26
000192 83bf      	STD  Y+6+1,R27
                 _0x2000054:
000193 d0a6      	RCALL SUBOPT_0x3
000194 3050      	CPI  R21,0
000195 f009      	BREQ _0x2000055
000196 5051      	SUBI R21,LOW(1)
                 _0x2000055:
000197 5031      	SUBI R19,LOW(1)
000198 cfec      	RJMP _0x2000050
                 _0x2000052:
000199 c046      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
00019a e320      	LDI  R18,LOW(48)
00019b 81ee      	LDD  R30,Y+6
00019c 81ff      	LDD  R31,Y+6+1
00019d d0e0      	RCALL __GETW1PF
00019e 87e8      	STD  Y+8,R30
00019f 87f9      	STD  Y+8+1,R31
0001a0 81ee      	LDD  R30,Y+6
0001a1 81ff      	LDD  R31,Y+6+1
0001a2 9632      	ADIW R30,2
0001a3 d0b5      	RCALL SUBOPT_0x9
                 _0x200005A:
0001a4 85e8      	LDD  R30,Y+8
0001a5 85f9      	LDD  R31,Y+8+1
0001a6 85aa      	LDD  R26,Y+10
0001a7 85bb      	LDD  R27,Y+10+1
0001a8 17ae      	CP   R26,R30
0001a9 07bf      	CPC  R27,R31
0001aa f048      	BRLO _0x200005C
0001ab 5f2f      	SUBI R18,-LOW(1)
0001ac 85a8      	LDD  R26,Y+8
0001ad 85b9      	LDD  R27,Y+8+1
0001ae 85ea      	LDD  R30,Y+10
0001af 85fb      	LDD  R31,Y+10+1
0001b0 1bea      	SUB  R30,R26
0001b1 0bfb      	SBC  R31,R27
0001b2 d0a9      	RCALL SUBOPT_0xA
0001b3 cff0      	RJMP _0x200005A
                 _0x200005C:
0001b4 332a      	CPI  R18,58
0001b5 f028      	BRLO _0x200005D
0001b6 ff03      	SBRS R16,3
0001b7 c002      	RJMP _0x200005E
0001b8 5f29      	SUBI R18,-LOW(7)
0001b9 c001      	RJMP _0x200005F
                 _0x200005E:
0001ba 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
0001bb fd04      	SBRC R16,4
0001bc c019      	RJMP _0x2000061
0001bd 3321      	CPI  R18,49
0001be f420      	BRSH _0x2000063
0001bf 85a8      	LDD  R26,Y+8
0001c0 85b9      	LDD  R27,Y+8+1
0001c1 9711      	SBIW R26,1
0001c2 f409      	BRNE _0x2000062
                 _0x2000063:
0001c3 c009      	RJMP _0x20000CD
                 _0x2000062:
0001c4 1753      	CP   R21,R19
0001c5 f010      	BRLO _0x2000067
0001c6 ff00      	SBRS R16,0
0001c7 c001      	RJMP _0x2000068
                 _0x2000067:
0001c8 c011      	RJMP _0x2000066
                 _0x2000068:
0001c9 e220      	LDI  R18,LOW(32)
0001ca ff07      	SBRS R16,7
0001cb c00a      	RJMP _0x2000069
0001cc e320      	LDI  R18,LOW(48)
                 _0x20000CD:
0001cd 6100      	ORI  R16,LOW(16)
0001ce ff02      	SBRS R16,2
0001cf c006      	RJMP _0x200006A
0001d0 7f0b      	ANDI R16,LOW(251)
0001d1 934a      	ST   -Y,R20
0001d2 d075      	RCALL SUBOPT_0x6
0001d3 3050      	CPI  R21,0
0001d4 f009      	BREQ _0x200006B
0001d5 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
0001d6 d063      	RCALL SUBOPT_0x3
0001d7 3050      	CPI  R21,0
0001d8 f009      	BREQ _0x200006C
0001d9 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
0001da 5031      	SUBI R19,LOW(1)
0001db 85a8      	LDD  R26,Y+8
0001dc 85b9      	LDD  R27,Y+8+1
0001dd 9712      	SBIW R26,2
0001de f008      	BRLO _0x2000059
0001df cfba      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
0001e0 ff00      	SBRS R16,0
0001e1 c007      	RJMP _0x200006D
                 _0x200006E:
0001e2 3050      	CPI  R21,0
0001e3 f029      	BREQ _0x2000070
0001e4 5051      	SUBI R21,LOW(1)
0001e5 e2e0      	LDI  R30,LOW(32)
0001e6 93ea      	ST   -Y,R30
0001e7 d060      	RCALL SUBOPT_0x6
0001e8 cff9      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000CC:
0001e9 e010      	LDI  R17,LOW(0)
                 _0x200001B:
0001ea cef3      	RJMP _0x2000016
                 _0x2000018:
0001eb 85ac      	LDD  R26,Y+12
0001ec 85bd      	LDD  R27,Y+12+1
0001ed d049      	RCALL SUBOPT_0x2
0001ee d077      	RCALL __LOADLOCR6
0001ef 9664      	ADIW R28,20
0001f0 9508      	RET
                 ; .FEND
                 _printf:
                 ; .FSTART _printf
0001f1 92ff      	PUSH R15
0001f2 2ef8      	MOV  R15,R24
0001f3 9726      	SBIW R28,6
0001f4 d06e      	RCALL __SAVELOCR2
0001f5 01de      	MOVW R26,R28
0001f6 9614      	ADIW R26,4
0001f7 d075      	RCALL __ADDW2R15
0001f8 018d      	MOVW R16,R26
0001f9 e0e0      	LDI  R30,LOW(0)
0001fa 83ec      	STD  Y+4,R30
0001fb 83ed      	STD  Y+4+1,R30
0001fc 83ee      	STD  Y+6,R30
0001fd 83ef      	STD  Y+6+1,R30
0001fe 01de      	MOVW R26,R28
0001ff 9618      	ADIW R26,8
000200 d06c      	RCALL __ADDW2R15
000201 d035      	RCALL SUBOPT_0x2
000202 93fa      	ST   -Y,R31
000203 93ea      	ST   -Y,R30
000204 931a      	ST   -Y,R17
000205 930a      	ST   -Y,R16
000206 ece9      	LDI  R30,LOW(_put_usart_G100)
000207 e0f0      	LDI  R31,HIGH(_put_usart_G100)
000208 93fa      	ST   -Y,R31
000209 93ea      	ST   -Y,R30
00020a 01de      	MOVW R26,R28
00020b 9618      	ADIW R26,8
00020c dec7      	RCALL __print_G100
00020d d05c      	RCALL __LOADLOCR2
00020e 9628      	ADIW R28,8
00020f 90ff      	POP  R15
000210 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000211 d022      	RCALL SUBOPT_0x1
000212 91a9          ld   r26,y+
000213 91b9          ld   r27,y+
000214 27ee          clr  r30
000215 27ff          clr  r31
                 strlen0:
000216 916d          ld   r22,x+
000217 2366          tst  r22
000218 f011          breq strlen1
000219 9631          adiw r30,1
00021a cffb          rjmp strlen0
                 strlen1:
00021b 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00021c d017      	RCALL SUBOPT_0x1
00021d 27aa          clr  r26
00021e 27bb          clr  r27
00021f 91e9          ld   r30,y+
000220 91f9          ld   r31,y+
                 strlenf0:
000221 9005      	lpm  r0,z+
000222 2000          tst  r0
000223 f011          breq strlenf1
000224 9611          adiw r26,1
000225 cffb          rjmp strlenf0
                 strlenf1:
000226 01fd          movw r30,r26
000227 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x0:
000228 012f      	MOVW R4,R30
                +
000229 e3e8     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00022a e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00022b 93fa      	ST   -Y,R31
00022c 93ea      	ST   -Y,R30
00022d 01f2      	MOVW R30,R4
00022e d046      	RCALL __CWD1
00022f d052      	RCALL __PUTPARD1
000230 e084      	LDI  R24,4
000231 dfbf      	RCALL _printf
000232 9626      	ADIW R28,6
000233 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
000234 93ba      	ST   -Y,R27
000235 93aa      	ST   -Y,R26
000236 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
000237 91ed      	LD   R30,X+
000238 91fd      	LD   R31,X+
000239 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x3:
00023a 932a      	ST   -Y,R18
00023b 85ad      	LDD  R26,Y+13
00023c 85be      	LDD  R27,Y+13+1
00023d 85ef      	LDD  R30,Y+15
00023e 89f8      	LDD  R31,Y+15+1
00023f 9509      	ICALL
000240 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
000241 89e8      	LDD  R30,Y+16
000242 89f9      	LDD  R31,Y+16+1
000243 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x5:
000244 9734      	SBIW R30,4
000245 8be8      	STD  Y+16,R30
000246 8bf9      	STD  Y+16+1,R31
000247 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x6:
000248 85ad      	LDD  R26,Y+13
000249 85be      	LDD  R27,Y+13+1
00024a 85ef      	LDD  R30,Y+15
00024b 89f8      	LDD  R31,Y+15+1
00024c 9509      	ICALL
00024d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
00024e dff2      	RCALL SUBOPT_0x4
00024f cff4      	RJMP SUBOPT_0x5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x8:
000250 89a8      	LDD  R26,Y+16
000251 89b9      	LDD  R27,Y+16+1
000252 9614      	ADIW R26,4
000253 dfe3      	RCALL SUBOPT_0x2
000254 83ee      	STD  Y+6,R30
000255 83ff      	STD  Y+6+1,R31
000256 81ae      	LDD  R26,Y+6
000257 81bf      	LDD  R27,Y+6+1
000258 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
000259 83ee      	STD  Y+6,R30
00025a 83ff      	STD  Y+6+1,R31
00025b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
00025c 87ea      	STD  Y+10,R30
00025d 87fb      	STD  Y+10+1,R31
00025e 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
00025f 935a      	ST   -Y,R21
                 __SAVELOCR5:
000260 934a      	ST   -Y,R20
                 __SAVELOCR4:
000261 933a      	ST   -Y,R19
                 __SAVELOCR3:
000262 932a      	ST   -Y,R18
                 __SAVELOCR2:
000263 931a      	ST   -Y,R17
000264 930a      	ST   -Y,R16
000265 9508      	RET
                 
                 __LOADLOCR6:
000266 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000267 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000268 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000269 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00026a 8119      	LDD  R17,Y+1
00026b 8108      	LD   R16,Y
00026c 9508      	RET
                 
                 __ADDW2R15:
00026d 2400      	CLR  R0
00026e 0daf      	ADD  R26,R15
00026f 1db0      	ADC  R27,R0
000270 9508      	RET
                 
                 __ANEGW1:
000271 95f1      	NEG  R31
000272 95e1      	NEG  R30
000273 40f0      	SBCI R31,0
000274 9508      	RET
                 
                 __CWD1:
000275 2f6f      	MOV  R22,R31
000276 0f66      	ADD  R22,R22
000277 0b66      	SBC  R22,R22
000278 2f76      	MOV  R23,R22
000279 9508      	RET
                 
                 __GETW1P:
00027a 91ed      	LD   R30,X+
00027b 91fc      	LD   R31,X
00027c 9711      	SBIW R26,1
00027d 9508      	RET
                 
                 __GETW1PF:
00027e 9005      	LPM  R0,Z+
00027f 91f4      	LPM  R31,Z
000280 2de0      	MOV  R30,R0
000281 9508      	RET
                 
                 __PUTPARD1:
000282 937a      	ST   -Y,R23
000283 936a      	ST   -Y,R22
000284 93fa      	ST   -Y,R31
000285 93ea      	ST   -Y,R30
000286 9508      	RET
                 
                 _delay_ms:
000287 9610      	adiw r26,0
000288 f039      	breq __delay_ms1
                 __delay_ms0:
000289 95a8      	wdr
                +
00028a e686     +LDI R24 , LOW ( 0xE66 )
00028b e09e     +LDI R25 , HIGH ( 0xE66 )
                +__DELAY_USW_LOOP :
00028c 9701     +SBIW R24 , 1
00028d f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xE66
00028e 9711      	sbiw r26,1
00028f f7c9      	brne __delay_ms0
                 __delay_ms1:
000290 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8 register use summary:
r0 :   9 r1 :   0 r2 :   0 r3 :   0 r4 :   9 r5 :   5 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  28 r17:  17 r18:  27 r19:   8 r20:   9 r21:  17 r22:   9 r23:   2 
r24:   9 r25:   2 r26:  52 r27:  26 r28:  12 r29:   1 r30: 143 r31:  49 
x  :  12 y  : 106 z  :   6 
Registers used: 23 out of 35 (65.7%)

ATmega8 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   3 
adiw  :  19 and   :   0 andi  :   4 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  12 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   6 
brlt  :   1 brmi  :   0 brne  :  24 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 cbi   :   2 
cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 clr   :   9 
cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 cp    :   6 
cpc   :   4 cpi   :  29 cpse  :   0 dec   :   1 des   :   0 eor   :   0 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 in    :   0 
inc   :   0 ld    :  13 ldd   :  55 ldi   :  75 lds   :   0 lpm   :   7 
lsl   :   0 lsr   :   0 mov   :  14 movw  :   9 mul   :   1 muls  :   0 
mulsu :   0 neg   :   2 nop   :   0 or    :   1 ori   :   6 out   :  43 
pop   :   1 push  :   1 rcall :  58 ret   :  25 reti  :   0 rjmp  :  80 
rol   :   0 ror   :   0 sbc   :   2 sbci  :   1 sbi   :   3 sbic  :   0 
sbis  :   5 sbiw  :  11 sbr   :   0 sbrc  :   2 sbrs  :  10 sec   :   0 
seh   :   0 sei   :   0 sen   :   0 ser   :   0 ses   :   0 set   :   0 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :  33 std   :  18 
sts   :   0 sub   :   1 subi  :  13 swap  :   0 tst   :   3 wdr   :   1 

Instructions used: 47 out of 114 (41.2%)

ATmega8 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000522   1238     76   1314    8192  16.0%
[.dseg] 0x000060 0x000160      0      0      0    1024   0.0%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 3 warnings
