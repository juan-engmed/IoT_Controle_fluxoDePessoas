
AVRASM ver. 2.1.30  C:\Users\Filipe\Desktop\UART\List\UART.asm Fri Mar 05 13:31:05 2021

C:\Users\Filipe\Desktop\UART\List\UART.asm(1081): warning: Register r4 already defined by the .DEF directive
C:\Users\Filipe\Desktop\UART\List\UART.asm(1082): warning: Register r5 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.43 
                 ;(C) Copyright 1998-2021 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Release
                 ;Chip type              : ATmega8
                 ;Program type           : Application
                 ;Clock frequency        : 14,745600 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 1
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	RCALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	RCALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _cont=R4
                 	.DEF _cont_msb=R5
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c038      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 cff6      	RJMP 0x00
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
                 
                 _tbl10_G100:
000013 2710
000014 03e8
000015 0064
000016 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000017 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000018 1000
000019 0100
00001a 0010
00001b 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
00001c 754e
00001d 656d
00001e 6f72
00001f 6420      	.DB  0x4E,0x75,0x6D,0x65,0x72,0x6F,0x20,0x64
000020 2065
000021 6570
000022 7373
000023 616f      	.DB  0x65,0x20,0x70,0x65,0x73,0x73,0x6F,0x61
000024 2073
000025 6f6e
000026 6920
000027 746e      	.DB  0x73,0x20,0x6E,0x6F,0x20,0x69,0x6E,0x74
000028 7265
000029 6f69
00002a 3a72
00002b 3d20      	.DB  0x65,0x72,0x69,0x6F,0x72,0x3A,0x20,0x3D
00002c 2520
00002d 2e64
00002e 0a0d
00002f 4100      	.DB  0x20,0x25,0x64,0x2E,0xD,0xA,0x0,0x41
000030 626d
000031 6569
000032 746e
000033 2065      	.DB  0x6D,0x62,0x69,0x65,0x6E,0x74,0x65,0x20
000034 6176
000035 697a
000036 206f
000037 0a0d      	.DB  0x76,0x61,0x7A,0x69,0x6F,0x20,0xD,0xA
C:\Users\Filipe\Desktop\UART\List\UART.asm(1125): warning: .cseg .db misalignment - padding zero byte
000038 0000      	.DB  0x0
                 __RESET:
000039 94f8      	CLI
00003a 27ee      	CLR  R30
00003b bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00003c e0f1      	LDI  R31,1
00003d bffb      	OUT  GICR,R31
00003e bfeb      	OUT  GICR,R30
00003f bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000040 e1f8      	LDI  R31,0x18
000041 bdf1      	OUT  WDTCR,R31
000042 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000043 e08d      	LDI  R24,(14-2)+1
000044 e0a2      	LDI  R26,2
000045 27bb      	CLR  R27
                 __CLEAR_REG:
000046 93ed      	ST   X+,R30
000047 958a      	DEC  R24
000048 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000049 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00004a e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00004b e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00004c 93ed      	ST   X+,R30
00004d 9701      	SBIW R24,1
00004e f7e9      	BRNE __CLEAR_SRAM
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00004f e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000050 bfed      	OUT  SPL,R30
000051 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000052 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000053 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000054 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000055 c000      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;void main(void)
                 ; 0000 0024 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0025 // Declare your local variables here
                 ; 0000 0026 cont = 0;
000056 2444      	CLR  R4
000057 2455      	CLR  R5
                 ; 0000 0027 
                 ; 0000 0028 // Input/Output Ports initialization
                 ; 0000 0029 // Port B initialization
                 ; 0000 002A // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 002B // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 002C PORTB=0x00;
000058 e0e0      	LDI  R30,LOW(0)
000059 bbe8      	OUT  0x18,R30
                 ; 0000 002D DDRB=0x02;
00005a e0e2      	LDI  R30,LOW(2)
00005b bbe7      	OUT  0x17,R30
                 ; 0000 002E 
                 ; 0000 002F // Port C initialization
                 ; 0000 0030 // Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 0031 // State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 0032 PORTC=0x00;
00005c e0e0      	LDI  R30,LOW(0)
00005d bbe5      	OUT  0x15,R30
                 ; 0000 0033 DDRC=0x00;
00005e bbe4      	OUT  0x14,R30
                 ; 0000 0034 
                 ; 0000 0035 // Port D initialization
                 ; 0000 0036 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 0037 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 0038 PORTD=0x00;
00005f bbe2      	OUT  0x12,R30
                 ; 0000 0039 DDRD=0x00;
000060 bbe1      	OUT  0x11,R30
                 ; 0000 003A 
                 ; 0000 003B // Timer/Counter 0 initialization
                 ; 0000 003C // Clock source: System Clock
                 ; 0000 003D // Clock value: Timer 0 Stopped
                 ; 0000 003E TCCR0=0x00;
000061 bfe3      	OUT  0x33,R30
                 ; 0000 003F TCNT0=0x00;
000062 bfe2      	OUT  0x32,R30
                 ; 0000 0040 
                 ; 0000 0041 // Timer/Counter 1 initialization
                 ; 0000 0042 // Clock source: System Clock
                 ; 0000 0043 // Clock value: Timer1 Stopped
                 ; 0000 0044 // Mode: Normal top=0xFFFF
                 ; 0000 0045 // OC1A output: Discon.
                 ; 0000 0046 // OC1B output: Discon.
                 ; 0000 0047 // Noise Canceler: Off
                 ; 0000 0048 // Input Capture on Falling Edge
                 ; 0000 0049 // Timer1 Overflow Interrupt: Off
                 ; 0000 004A // Input Capture Interrupt: Off
                 ; 0000 004B // Compare A Match Interrupt: Off
                 ; 0000 004C // Compare B Match Interrupt: Off
                 ; 0000 004D TCCR1A=0x00;
000063 bdef      	OUT  0x2F,R30
                 ; 0000 004E TCCR1B=0x00;
000064 bdee      	OUT  0x2E,R30
                 ; 0000 004F TCNT1H=0x00;
000065 bded      	OUT  0x2D,R30
                 ; 0000 0050 TCNT1L=0x00;
000066 bdec      	OUT  0x2C,R30
                 ; 0000 0051 ICR1H=0x00;
000067 bde7      	OUT  0x27,R30
                 ; 0000 0052 ICR1L=0x00;
000068 bde6      	OUT  0x26,R30
                 ; 0000 0053 OCR1AH=0x00;
000069 bdeb      	OUT  0x2B,R30
                 ; 0000 0054 OCR1AL=0x00;
00006a bdea      	OUT  0x2A,R30
                 ; 0000 0055 OCR1BH=0x00;
00006b bde9      	OUT  0x29,R30
                 ; 0000 0056 OCR1BL=0x00;
00006c bde8      	OUT  0x28,R30
                 ; 0000 0057 
                 ; 0000 0058 // Timer/Counter 2 initialization
                 ; 0000 0059 // Clock source: System Clock
                 ; 0000 005A // Clock value: Timer2 Stopped
                 ; 0000 005B // Mode: Normal top=0xFF
                 ; 0000 005C // OC2 output: Disconnected
                 ; 0000 005D ASSR=0x00;
00006d bde2      	OUT  0x22,R30
                 ; 0000 005E TCCR2=0x00;
00006e bde5      	OUT  0x25,R30
                 ; 0000 005F TCNT2=0x00;
00006f bde4      	OUT  0x24,R30
                 ; 0000 0060 OCR2=0x00;
000070 bde3      	OUT  0x23,R30
                 ; 0000 0061 
                 ; 0000 0062 // External Interrupt(s) initialization
                 ; 0000 0063 // INT0: Off
                 ; 0000 0064 // INT1: Off
                 ; 0000 0065 MCUCR=0x00;
000071 bfe5      	OUT  0x35,R30
                 ; 0000 0066 
                 ; 0000 0067 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0068 TIMSK=0x00;
000072 bfe9      	OUT  0x39,R30
                 ; 0000 0069 
                 ; 0000 006A // USART initialization
                 ; 0000 006B // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 006C // USART Receiver: Off
                 ; 0000 006D // USART Transmitter: On
                 ; 0000 006E // USART Mode: Asynchronous
                 ; 0000 006F // USART Baud Rate: 19200
                 ; 0000 0070 UCSRA=0x00;
000073 b9eb      	OUT  0xB,R30
                 ; 0000 0071 UCSRB=0x08;
000074 e0e8      	LDI  R30,LOW(8)
000075 b9ea      	OUT  0xA,R30
                 ; 0000 0072 UCSRC=0x86;
000076 e8e6      	LDI  R30,LOW(134)
000077 bde0      	OUT  0x20,R30
                 ; 0000 0073 UBRRH=0x00;
000078 e0e0      	LDI  R30,LOW(0)
000079 bde0      	OUT  0x20,R30
                 ; 0000 0074 UBRRL=0x2F;
00007a e2ef      	LDI  R30,LOW(47)
00007b b9e9      	OUT  0x9,R30
                 ; 0000 0075 
                 ; 0000 0076 // Analog Comparator initialization
                 ; 0000 0077 // Analog Comparator: Off
                 ; 0000 0078 // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0000 0079 ACSR=0x80;
00007c e8e0      	LDI  R30,LOW(128)
00007d b9e8      	OUT  0x8,R30
                 ; 0000 007A SFIOR=0x00;
00007e e0e0      	LDI  R30,LOW(0)
00007f bfe0      	OUT  0x30,R30
                 ; 0000 007B 
                 ; 0000 007C // ADC initialization
                 ; 0000 007D // ADC disabled
                 ; 0000 007E ADCSRA=0x00;
000080 b9e6      	OUT  0x6,R30
                 ; 0000 007F 
                 ; 0000 0080 // SPI initialization
                 ; 0000 0081 // SPI disabled
                 ; 0000 0082 SPCR=0x00;
000081 b9ed      	OUT  0xD,R30
                 ; 0000 0083 
                 ; 0000 0084 // TWI initialization
                 ; 0000 0085 // TWI disabled
                 ; 0000 0086 TWCR=0x00;
000082 bfe6      	OUT  0x36,R30
                 ; 0000 0087 
                 ; 0000 0088 while (1)
                 _0x3:
                 ; 0000 0089 {
                 ; 0000 008A // Place your code here
                 ; 0000 008B if (PIND.1)
000083 9b81      	SBIS 0x10,1
000084 c003      	RJMP _0x6
                 ; 0000 008C {
                 ; 0000 008D cont = cont + 1;
000085 01f2      	MOVW R30,R4
000086 9631      	ADIW R30,1
000087 d17b      	RCALL SUBOPT_0x0
                 ; 0000 008E printf("Numero de pessoas no interior: = %d.\r\n",cont);
                 ; 0000 008F 
                 ; 0000 0090 };
                 _0x6:
                 ; 0000 0091 
                 ; 0000 0092 delay_ms(500); // Aguarda 500 milisegundos
000088 efa4      	LDI  R26,LOW(500)
000089 e0b1      	LDI  R27,HIGH(500)
00008a d1d7      	RCALL _delay_ms
                 ; 0000 0093 
                 ; 0000 0094 if (PIND.2)
00008b 9b82      	SBIS 0x10,2
00008c c00e      	RJMP _0x7
                 ; 0000 0095 {
                 ; 0000 0096 if(cont == 0)
00008d 2c04      	MOV  R0,R4
00008e 2805      	OR   R0,R5
00008f f441      	BRNE _0x8
                 ; 0000 0097 {
                 ; 0000 0098 printf("Ambiente vazio \r\n");
                +
000090 e5ef     +LDI R30 , LOW ( 2 * _0x0 + ( 39 ) )
000091 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 39 ) )
                 	__POINTW1FN _0x0,39
000092 93fa      	ST   -Y,R31
000093 93ea      	ST   -Y,R30
000094 e080      	LDI  R24,0
000095 d136      	RCALL _printf
000096 9622      	ADIW R28,2
                 ; 0000 0099 }
                 ; 0000 009A 
                 ; 0000 009B else
000097 c003      	RJMP _0x9
                 _0x8:
                 ; 0000 009C {
                 ; 0000 009D cont = cont - 1;
000098 01f2      	MOVW R30,R4
000099 9731      	SBIW R30,1
00009a d168      	RCALL SUBOPT_0x0
                 ; 0000 009E printf("Numero de pessoas no interior: = %d.\r\n",cont);
                 ; 0000 009F }
                 _0x9:
                 ; 0000 00A0 
                 ; 0000 00A1 
                 ; 0000 00A2 };
                 _0x7:
                 ; 0000 00A3 }
00009b cfe7      	RJMP _0x3
                 ; 0000 00A4 }
                 _0xA:
00009c cfff      	RJMP _0xA
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
                 ; .FSTART _putchar
00009d 93aa      	ST   -Y,R26
                 putchar0:
00009e 9b5d           sbis usr,udre
00009f cffe           rjmp putchar0
0000a0 81e8           ld   r30,y
0000a1 b9ec           out  udr,r30
0000a2 9621      	ADIW R28,1
0000a3 9508      	RET
                 ; .FEND
                 _put_usart_G100:
                 ; .FSTART _put_usart_G100
0000a4 d16a      	RCALL SUBOPT_0x1
0000a5 81aa      	LDD  R26,Y+2
0000a6 dff6      	RCALL _putchar
0000a7 81a8      	LD   R26,Y
0000a8 81b9      	LDD  R27,Y+1
0000a9 d168      	RCALL SUBOPT_0x2
0000aa 9631      	ADIW R30,1
0000ab 93fe      	ST   -X,R31
0000ac 93ee      	ST   -X,R30
0000ad 9623      	ADIW R28,3
0000ae 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0000af d15f      	RCALL SUBOPT_0x1
0000b0 9726      	SBIW R28,6
0000b1 d188      	RCALL __SAVELOCR6
0000b2 e010      	LDI  R17,0
0000b3 85ac      	LDD  R26,Y+12
0000b4 85bd      	LDD  R27,Y+12+1
0000b5 e0e0      	LDI  R30,LOW(0)
0000b6 e0f0      	LDI  R31,HIGH(0)
0000b7 93ed      	ST   X+,R30
0000b8 93fc      	ST   X,R31
                 _0x2000016:
0000b9 89ea      	LDD  R30,Y+18
0000ba 89fb      	LDD  R31,Y+18+1
0000bb 9631      	ADIW R30,1
0000bc 8bea      	STD  Y+18,R30
0000bd 8bfb      	STD  Y+18+1,R31
0000be 9731      	SBIW R30,1
0000bf 91e4      	LPM  R30,Z
0000c0 2f2e      	MOV  R18,R30
0000c1 30e0      	CPI  R30,0
0000c2 f409      	BRNE PC+2
0000c3 c102      	RJMP _0x2000018
0000c4 2fe1      	MOV  R30,R17
0000c5 30e0      	CPI  R30,0
0000c6 f431      	BRNE _0x200001C
0000c7 3225      	CPI  R18,37
0000c8 f411      	BRNE _0x200001D
0000c9 e011      	LDI  R17,LOW(1)
0000ca c001      	RJMP _0x200001E
                 _0x200001D:
0000cb d149      	RCALL SUBOPT_0x3
                 _0x200001E:
0000cc c0f8      	RJMP _0x200001B
                 _0x200001C:
0000cd 30e1      	CPI  R30,LOW(0x1)
0000ce f4a1      	BRNE _0x200001F
0000cf 3225      	CPI  R18,37
0000d0 f411      	BRNE _0x2000020
0000d1 d143      	RCALL SUBOPT_0x3
0000d2 c0f1      	RJMP _0x20000CC
                 _0x2000020:
0000d3 e012      	LDI  R17,LOW(2)
0000d4 e040      	LDI  R20,LOW(0)
0000d5 e000      	LDI  R16,LOW(0)
0000d6 322d      	CPI  R18,45
0000d7 f411      	BRNE _0x2000021
0000d8 e001      	LDI  R16,LOW(1)
0000d9 c0eb      	RJMP _0x200001B
                 _0x2000021:
0000da 322b      	CPI  R18,43
0000db f411      	BRNE _0x2000022
0000dc e24b      	LDI  R20,LOW(43)
0000dd c0e7      	RJMP _0x200001B
                 _0x2000022:
0000de 3220      	CPI  R18,32
0000df f411      	BRNE _0x2000023
0000e0 e240      	LDI  R20,LOW(32)
0000e1 c0e3      	RJMP _0x200001B
                 _0x2000023:
0000e2 c002      	RJMP _0x2000024
                 _0x200001F:
0000e3 30e2      	CPI  R30,LOW(0x2)
0000e4 f439      	BRNE _0x2000025
                 _0x2000024:
0000e5 e050      	LDI  R21,LOW(0)
0000e6 e013      	LDI  R17,LOW(3)
0000e7 3320      	CPI  R18,48
0000e8 f411      	BRNE _0x2000026
0000e9 6800      	ORI  R16,LOW(128)
0000ea c0da      	RJMP _0x200001B
                 _0x2000026:
0000eb c003      	RJMP _0x2000027
                 _0x2000025:
0000ec 30e3      	CPI  R30,LOW(0x3)
0000ed f009      	BREQ PC+2
0000ee c0d6      	RJMP _0x200001B
                 _0x2000027:
0000ef 3320      	CPI  R18,48
0000f0 f010      	BRLO _0x200002A
0000f1 332a      	CPI  R18,58
0000f2 f008      	BRLO _0x200002B
                 _0x200002A:
0000f3 c007      	RJMP _0x2000029
                 _0x200002B:
0000f4 e0aa      	LDI  R26,LOW(10)
0000f5 9f5a      	MUL  R21,R26
0000f6 2d50      	MOV  R21,R0
0000f7 2fe2      	MOV  R30,R18
0000f8 53e0      	SUBI R30,LOW(48)
0000f9 0f5e      	ADD  R21,R30
0000fa c0ca      	RJMP _0x200001B
                 _0x2000029:
0000fb 2fe2      	MOV  R30,R18
0000fc 36e3      	CPI  R30,LOW(0x63)
0000fd f439      	BRNE _0x200002F
0000fe d11d      	RCALL SUBOPT_0x4
0000ff d11f      	RCALL SUBOPT_0x5
000100 d11b      	RCALL SUBOPT_0x4
000101 81a4      	LDD  R26,Z+4
000102 93aa      	ST   -Y,R26
000103 d11f      	RCALL SUBOPT_0x6
000104 c0bf      	RJMP _0x2000030
                 _0x200002F:
000105 37e3      	CPI  R30,LOW(0x73)
000106 f429      	BRNE _0x2000032
000107 d121      	RCALL SUBOPT_0x7
000108 d122      	RCALL SUBOPT_0x8
000109 d0e2      	RCALL _strlen
00010a 2f1e      	MOV  R17,R30
00010b c007      	RJMP _0x2000033
                 _0x2000032:
00010c 37e0      	CPI  R30,LOW(0x70)
00010d f449      	BRNE _0x2000035
00010e d11a      	RCALL SUBOPT_0x7
00010f d11b      	RCALL SUBOPT_0x8
000110 d0e6      	RCALL _strlenf
000111 2f1e      	MOV  R17,R30
000112 6008      	ORI  R16,LOW(8)
                 _0x2000033:
000113 6002      	ORI  R16,LOW(2)
000114 770f      	ANDI R16,LOW(127)
000115 e030      	LDI  R19,LOW(0)
000116 c034      	RJMP _0x2000036
                 _0x2000035:
000117 36e4      	CPI  R30,LOW(0x64)
000118 f011      	BREQ _0x2000039
000119 36e9      	CPI  R30,LOW(0x69)
00011a f411      	BRNE _0x200003A
                 _0x2000039:
00011b 6004      	ORI  R16,LOW(4)
00011c c002      	RJMP _0x200003B
                 _0x200003A:
00011d 37e5      	CPI  R30,LOW(0x75)
00011e f429      	BRNE _0x200003C
                 _0x200003B:
00011f e2e6      	LDI  R30,LOW(_tbl10_G100*2)
000120 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000121 d112      	RCALL SUBOPT_0x9
000122 e015      	LDI  R17,LOW(5)
000123 c00b      	RJMP _0x200003D
                 _0x200003C:
000124 35e8      	CPI  R30,LOW(0x58)
000125 f411      	BRNE _0x200003F
000126 6008      	ORI  R16,LOW(8)
000127 c003      	RJMP _0x2000040
                 _0x200003F:
000128 37e8      	CPI  R30,LOW(0x78)
000129 f009      	BREQ PC+2
00012a c099      	RJMP _0x2000071
                 _0x2000040:
00012b e3e0      	LDI  R30,LOW(_tbl16_G100*2)
00012c e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
00012d d106      	RCALL SUBOPT_0x9
00012e e014      	LDI  R17,LOW(4)
                 _0x200003D:
00012f ff02      	SBRS R16,2
000130 c014      	RJMP _0x2000042
000131 d0f7      	RCALL SUBOPT_0x7
000132 89a8      	LDD  R26,Y+16
000133 89b9      	LDD  R27,Y+16+1
000134 9614      	ADIW R26,4
000135 d0dc      	RCALL SUBOPT_0x2
000136 d100      	RCALL SUBOPT_0xA
000137 85ab      	LDD  R26,Y+11
000138 23aa      	TST  R26
000139 f42a      	BRPL _0x2000043
00013a 85ea      	LDD  R30,Y+10
00013b 85fb      	LDD  R31,Y+10+1
00013c d10f      	RCALL __ANEGW1
00013d d0f9      	RCALL SUBOPT_0xA
00013e e24d      	LDI  R20,LOW(45)
                 _0x2000043:
00013f 3040      	CPI  R20,0
000140 f011      	BREQ _0x2000044
000141 5f1f      	SUBI R17,-LOW(1)
000142 c001      	RJMP _0x2000045
                 _0x2000044:
000143 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
000144 c006      	RJMP _0x2000046
                 _0x2000042:
000145 d0e3      	RCALL SUBOPT_0x7
000146 89a8      	LDD  R26,Y+16
000147 89b9      	LDD  R27,Y+16+1
000148 9614      	ADIW R26,4
000149 d10b      	RCALL __GETW1P
00014a d0ec      	RCALL SUBOPT_0xA
                 _0x2000046:
                 _0x2000036:
00014b fd00      	SBRC R16,0
00014c c010      	RJMP _0x2000047
                 _0x2000048:
00014d 1715      	CP   R17,R21
00014e f470      	BRSH _0x200004A
00014f ff07      	SBRS R16,7
000150 c008      	RJMP _0x200004B
000151 ff02      	SBRS R16,2
000152 c004      	RJMP _0x200004C
000153 7f0b      	ANDI R16,LOW(251)
000154 2f24      	MOV  R18,R20
000155 5011      	SUBI R17,LOW(1)
000156 c001      	RJMP _0x200004D
                 _0x200004C:
000157 e320      	LDI  R18,LOW(48)
                 _0x200004D:
000158 c001      	RJMP _0x200004E
                 _0x200004B:
000159 e220      	LDI  R18,LOW(32)
                 _0x200004E:
00015a d0ba      	RCALL SUBOPT_0x3
00015b 5051      	SUBI R21,LOW(1)
00015c cff0      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
00015d 2f31      	MOV  R19,R17
00015e ff01      	SBRS R16,1
00015f c015      	RJMP _0x200004F
                 _0x2000050:
000160 3030      	CPI  R19,0
000161 f091      	BREQ _0x2000052
000162 ff03      	SBRS R16,3
000163 c005      	RJMP _0x2000053
000164 81ee      	LDD  R30,Y+6
000165 81ff      	LDD  R31,Y+6+1
000166 9125      	LPM  R18,Z+
000167 d0cc      	RCALL SUBOPT_0x9
000168 c005      	RJMP _0x2000054
                 _0x2000053:
000169 81ae      	LDD  R26,Y+6
00016a 81bf      	LDD  R27,Y+6+1
00016b 912d      	LD   R18,X+
00016c 83ae      	STD  Y+6,R26
00016d 83bf      	STD  Y+6+1,R27
                 _0x2000054:
00016e d0a6      	RCALL SUBOPT_0x3
00016f 3050      	CPI  R21,0
000170 f009      	BREQ _0x2000055
000171 5051      	SUBI R21,LOW(1)
                 _0x2000055:
000172 5031      	SUBI R19,LOW(1)
000173 cfec      	RJMP _0x2000050
                 _0x2000052:
000174 c046      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
000175 e320      	LDI  R18,LOW(48)
000176 81ee      	LDD  R30,Y+6
000177 81ff      	LDD  R31,Y+6+1
000178 d0e0      	RCALL __GETW1PF
000179 87e8      	STD  Y+8,R30
00017a 87f9      	STD  Y+8+1,R31
00017b 81ee      	LDD  R30,Y+6
00017c 81ff      	LDD  R31,Y+6+1
00017d 9632      	ADIW R30,2
00017e d0b5      	RCALL SUBOPT_0x9
                 _0x200005A:
00017f 85e8      	LDD  R30,Y+8
000180 85f9      	LDD  R31,Y+8+1
000181 85aa      	LDD  R26,Y+10
000182 85bb      	LDD  R27,Y+10+1
000183 17ae      	CP   R26,R30
000184 07bf      	CPC  R27,R31
000185 f048      	BRLO _0x200005C
000186 5f2f      	SUBI R18,-LOW(1)
000187 85a8      	LDD  R26,Y+8
000188 85b9      	LDD  R27,Y+8+1
000189 85ea      	LDD  R30,Y+10
00018a 85fb      	LDD  R31,Y+10+1
00018b 1bea      	SUB  R30,R26
00018c 0bfb      	SBC  R31,R27
00018d d0a9      	RCALL SUBOPT_0xA
00018e cff0      	RJMP _0x200005A
                 _0x200005C:
00018f 332a      	CPI  R18,58
000190 f028      	BRLO _0x200005D
000191 ff03      	SBRS R16,3
000192 c002      	RJMP _0x200005E
000193 5f29      	SUBI R18,-LOW(7)
000194 c001      	RJMP _0x200005F
                 _0x200005E:
000195 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
000196 fd04      	SBRC R16,4
000197 c019      	RJMP _0x2000061
000198 3321      	CPI  R18,49
000199 f420      	BRSH _0x2000063
00019a 85a8      	LDD  R26,Y+8
00019b 85b9      	LDD  R27,Y+8+1
00019c 9711      	SBIW R26,1
00019d f409      	BRNE _0x2000062
                 _0x2000063:
00019e c009      	RJMP _0x20000CD
                 _0x2000062:
00019f 1753      	CP   R21,R19
0001a0 f010      	BRLO _0x2000067
0001a1 ff00      	SBRS R16,0
0001a2 c001      	RJMP _0x2000068
                 _0x2000067:
0001a3 c011      	RJMP _0x2000066
                 _0x2000068:
0001a4 e220      	LDI  R18,LOW(32)
0001a5 ff07      	SBRS R16,7
0001a6 c00a      	RJMP _0x2000069
0001a7 e320      	LDI  R18,LOW(48)
                 _0x20000CD:
0001a8 6100      	ORI  R16,LOW(16)
0001a9 ff02      	SBRS R16,2
0001aa c006      	RJMP _0x200006A
0001ab 7f0b      	ANDI R16,LOW(251)
0001ac 934a      	ST   -Y,R20
0001ad d075      	RCALL SUBOPT_0x6
0001ae 3050      	CPI  R21,0
0001af f009      	BREQ _0x200006B
0001b0 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
0001b1 d063      	RCALL SUBOPT_0x3
0001b2 3050      	CPI  R21,0
0001b3 f009      	BREQ _0x200006C
0001b4 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
0001b5 5031      	SUBI R19,LOW(1)
0001b6 85a8      	LDD  R26,Y+8
0001b7 85b9      	LDD  R27,Y+8+1
0001b8 9712      	SBIW R26,2
0001b9 f008      	BRLO _0x2000059
0001ba cfba      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
0001bb ff00      	SBRS R16,0
0001bc c007      	RJMP _0x200006D
                 _0x200006E:
0001bd 3050      	CPI  R21,0
0001be f029      	BREQ _0x2000070
0001bf 5051      	SUBI R21,LOW(1)
0001c0 e2e0      	LDI  R30,LOW(32)
0001c1 93ea      	ST   -Y,R30
0001c2 d060      	RCALL SUBOPT_0x6
0001c3 cff9      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000CC:
0001c4 e010      	LDI  R17,LOW(0)
                 _0x200001B:
0001c5 cef3      	RJMP _0x2000016
                 _0x2000018:
0001c6 85ac      	LDD  R26,Y+12
0001c7 85bd      	LDD  R27,Y+12+1
0001c8 d049      	RCALL SUBOPT_0x2
0001c9 d077      	RCALL __LOADLOCR6
0001ca 9664      	ADIW R28,20
0001cb 9508      	RET
                 ; .FEND
                 _printf:
                 ; .FSTART _printf
0001cc 92ff      	PUSH R15
0001cd 2ef8      	MOV  R15,R24
0001ce 9726      	SBIW R28,6
0001cf d06e      	RCALL __SAVELOCR2
0001d0 01de      	MOVW R26,R28
0001d1 9614      	ADIW R26,4
0001d2 d075      	RCALL __ADDW2R15
0001d3 018d      	MOVW R16,R26
0001d4 e0e0      	LDI  R30,LOW(0)
0001d5 83ec      	STD  Y+4,R30
0001d6 83ed      	STD  Y+4+1,R30
0001d7 83ee      	STD  Y+6,R30
0001d8 83ef      	STD  Y+6+1,R30
0001d9 01de      	MOVW R26,R28
0001da 9618      	ADIW R26,8
0001db d06c      	RCALL __ADDW2R15
0001dc d035      	RCALL SUBOPT_0x2
0001dd 93fa      	ST   -Y,R31
0001de 93ea      	ST   -Y,R30
0001df 931a      	ST   -Y,R17
0001e0 930a      	ST   -Y,R16
0001e1 eae4      	LDI  R30,LOW(_put_usart_G100)
0001e2 e0f0      	LDI  R31,HIGH(_put_usart_G100)
0001e3 93fa      	ST   -Y,R31
0001e4 93ea      	ST   -Y,R30
0001e5 01de      	MOVW R26,R28
0001e6 9618      	ADIW R26,8
0001e7 dec7      	RCALL __print_G100
0001e8 d05c      	RCALL __LOADLOCR2
0001e9 9628      	ADIW R28,8
0001ea 90ff      	POP  R15
0001eb 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
0001ec d022      	RCALL SUBOPT_0x1
0001ed 91a9          ld   r26,y+
0001ee 91b9          ld   r27,y+
0001ef 27ee          clr  r30
0001f0 27ff          clr  r31
                 strlen0:
0001f1 916d          ld   r22,x+
0001f2 2366          tst  r22
0001f3 f011          breq strlen1
0001f4 9631          adiw r30,1
0001f5 cffb          rjmp strlen0
                 strlen1:
0001f6 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0001f7 d017      	RCALL SUBOPT_0x1
0001f8 27aa          clr  r26
0001f9 27bb          clr  r27
0001fa 91e9          ld   r30,y+
0001fb 91f9          ld   r31,y+
                 strlenf0:
0001fc 9005      	lpm  r0,z+
0001fd 2000          tst  r0
0001fe f011          breq strlenf1
0001ff 9611          adiw r26,1
000200 cffb          rjmp strlenf0
                 strlenf1:
000201 01fd          movw r30,r26
000202 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x0:
000203 012f      	MOVW R4,R30
                +
000204 e3e8     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000205 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000206 93fa      	ST   -Y,R31
000207 93ea      	ST   -Y,R30
000208 01f2      	MOVW R30,R4
000209 d046      	RCALL __CWD1
00020a d052      	RCALL __PUTPARD1
00020b e084      	LDI  R24,4
00020c dfbf      	RCALL _printf
00020d 9626      	ADIW R28,6
00020e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
00020f 93ba      	ST   -Y,R27
000210 93aa      	ST   -Y,R26
000211 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
000212 91ed      	LD   R30,X+
000213 91fd      	LD   R31,X+
000214 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x3:
000215 932a      	ST   -Y,R18
000216 85ad      	LDD  R26,Y+13
000217 85be      	LDD  R27,Y+13+1
000218 85ef      	LDD  R30,Y+15
000219 89f8      	LDD  R31,Y+15+1
00021a 9509      	ICALL
00021b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
00021c 89e8      	LDD  R30,Y+16
00021d 89f9      	LDD  R31,Y+16+1
00021e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x5:
00021f 9734      	SBIW R30,4
000220 8be8      	STD  Y+16,R30
000221 8bf9      	STD  Y+16+1,R31
000222 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x6:
000223 85ad      	LDD  R26,Y+13
000224 85be      	LDD  R27,Y+13+1
000225 85ef      	LDD  R30,Y+15
000226 89f8      	LDD  R31,Y+15+1
000227 9509      	ICALL
000228 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000229 dff2      	RCALL SUBOPT_0x4
00022a cff4      	RJMP SUBOPT_0x5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x8:
00022b 89a8      	LDD  R26,Y+16
00022c 89b9      	LDD  R27,Y+16+1
00022d 9614      	ADIW R26,4
00022e dfe3      	RCALL SUBOPT_0x2
00022f 83ee      	STD  Y+6,R30
000230 83ff      	STD  Y+6+1,R31
000231 81ae      	LDD  R26,Y+6
000232 81bf      	LDD  R27,Y+6+1
000233 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
000234 83ee      	STD  Y+6,R30
000235 83ff      	STD  Y+6+1,R31
000236 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
000237 87ea      	STD  Y+10,R30
000238 87fb      	STD  Y+10+1,R31
000239 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
00023a 935a      	ST   -Y,R21
                 __SAVELOCR5:
00023b 934a      	ST   -Y,R20
                 __SAVELOCR4:
00023c 933a      	ST   -Y,R19
                 __SAVELOCR3:
00023d 932a      	ST   -Y,R18
                 __SAVELOCR2:
00023e 931a      	ST   -Y,R17
00023f 930a      	ST   -Y,R16
000240 9508      	RET
                 
                 __LOADLOCR6:
000241 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000242 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000243 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000244 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000245 8119      	LDD  R17,Y+1
000246 8108      	LD   R16,Y
000247 9508      	RET
                 
                 __ADDW2R15:
000248 2400      	CLR  R0
000249 0daf      	ADD  R26,R15
00024a 1db0      	ADC  R27,R0
00024b 9508      	RET
                 
                 __ANEGW1:
00024c 95f1      	NEG  R31
00024d 95e1      	NEG  R30
00024e 40f0      	SBCI R31,0
00024f 9508      	RET
                 
                 __CWD1:
000250 2f6f      	MOV  R22,R31
000251 0f66      	ADD  R22,R22
000252 0b66      	SBC  R22,R22
000253 2f76      	MOV  R23,R22
000254 9508      	RET
                 
                 __GETW1P:
000255 91ed      	LD   R30,X+
000256 91fc      	LD   R31,X
000257 9711      	SBIW R26,1
000258 9508      	RET
                 
                 __GETW1PF:
000259 9005      	LPM  R0,Z+
00025a 91f4      	LPM  R31,Z
00025b 2de0      	MOV  R30,R0
00025c 9508      	RET
                 
                 __PUTPARD1:
00025d 937a      	ST   -Y,R23
00025e 936a      	ST   -Y,R22
00025f 93fa      	ST   -Y,R31
000260 93ea      	ST   -Y,R30
000261 9508      	RET
                 
                 _delay_ms:
000262 9610      	adiw r26,0
000263 f039      	breq __delay_ms1
                 __delay_ms0:
000264 95a8      	wdr
                +
000265 e686     +LDI R24 , LOW ( 0xE66 )
000266 e09e     +LDI R25 , HIGH ( 0xE66 )
                +__DELAY_USW_LOOP :
000267 9701     +SBIW R24 , 1
000268 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xE66
000269 9711      	sbiw r26,1
00026a f7c9      	brne __delay_ms0
                 __delay_ms1:
00026b 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8 register use summary:
r0 :   9 r1 :   0 r2 :   0 r3 :   0 r4 :   6 r5 :   2 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  28 r17:  17 r18:  27 r19:   8 r20:   9 r21:  17 r22:   9 r23:   2 
r24:   9 r25:   2 r26:  49 r27:  23 r28:  12 r29:   1 r30: 135 r31:  43 
x  :  12 y  : 106 z  :   6 
Registers used: 23 out of 35 (65.7%)

ATmega8 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   3 
adiw  :  19 and   :   0 andi  :   4 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  12 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   6 
brlt  :   0 brmi  :   0 brne  :  22 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 cbi   :   0 
cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 clr   :   9 
cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 cp    :   3 
cpc   :   1 cpi   :  29 cpse  :   0 dec   :   1 des   :   0 eor   :   0 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 in    :   0 
inc   :   0 ld    :  13 ldd   :  55 ldi   :  61 lds   :   0 lpm   :   7 
lsl   :   0 lsr   :   0 mov   :  14 movw  :   9 mul   :   1 muls  :   0 
mulsu :   0 neg   :   2 nop   :   0 or    :   1 ori   :   6 out   :  43 
pop   :   1 push  :   1 rcall :  55 ret   :  25 reti  :   0 rjmp  :  76 
rol   :   0 ror   :   0 sbc   :   2 sbci  :   1 sbi   :   0 sbic  :   0 
sbis  :   3 sbiw  :  11 sbr   :   0 sbrc  :   2 sbrs  :  10 sec   :   0 
seh   :   0 sei   :   0 sen   :   0 ser   :   0 ses   :   0 set   :   0 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :  33 std   :  18 
sts   :   0 sub   :   1 subi  :  13 swap  :   0 tst   :   3 wdr   :   1 

Instructions used: 44 out of 114 (38.6%)

ATmega8 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0004d8   1164     76   1240    8192  15.1%
[.dseg] 0x000060 0x000160      0      0      0    1024   0.0%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 3 warnings
