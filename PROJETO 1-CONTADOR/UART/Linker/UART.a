;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;void main(void)
; 0000 0024 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0025 // Declare your local variables here
; 0000 0026 cont = 0;
;PCODE: $0000000E VOL: 0
; 0000 0027 
; 0000 0028 // Input/Output Ports initialization
; 0000 0029 // Port B initialization
; 0000 002A // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 002B // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 002C PORTB=0x00;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 002D DDRB=0x02;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 002E 
; 0000 002F // Port C initialization
; 0000 0030 // Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0031 // State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0032 PORTC=0x00;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0033 DDRC=0x00;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0034 
; 0000 0035 // Port D initialization
; 0000 0036 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0037 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0038 PORTD=0x00;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0039 DDRD=0x00;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 003A 
; 0000 003B // Timer/Counter 0 initialization
; 0000 003C // Clock source: System Clock
; 0000 003D // Clock value: Timer 0 Stopped
; 0000 003E TCCR0=0x00;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 003F TCNT0=0x00;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0040 
; 0000 0041 // Timer/Counter 1 initialization
; 0000 0042 // Clock source: System Clock
; 0000 0043 // Clock value: Timer1 Stopped
; 0000 0044 // Mode: Normal top=0xFFFF
; 0000 0045 // OC1A output: Discon.
; 0000 0046 // OC1B output: Discon.
; 0000 0047 // Noise Canceler: Off
; 0000 0048 // Input Capture on Falling Edge
; 0000 0049 // Timer1 Overflow Interrupt: Off
; 0000 004A // Input Capture Interrupt: Off
; 0000 004B // Compare A Match Interrupt: Off
; 0000 004C // Compare B Match Interrupt: Off
; 0000 004D TCCR1A=0x00;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 004E TCCR1B=0x00;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 004F TCNT1H=0x00;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0050 TCNT1L=0x00;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0051 ICR1H=0x00;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0052 ICR1L=0x00;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0053 OCR1AH=0x00;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0054 OCR1AL=0x00;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0055 OCR1BH=0x00;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0056 OCR1BL=0x00;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0057 
; 0000 0058 // Timer/Counter 2 initialization
; 0000 0059 // Clock source: System Clock
; 0000 005A // Clock value: Timer2 Stopped
; 0000 005B // Mode: Normal top=0xFF
; 0000 005C // OC2 output: Disconnected
; 0000 005D ASSR=0x00;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 005E TCCR2=0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 005F TCNT2=0x00;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0060 OCR2=0x00;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0061 
; 0000 0062 // External Interrupt(s) initialization
; 0000 0063 // INT0: Off
; 0000 0064 // INT1: Off
; 0000 0065 MCUCR=0x00;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0066 
; 0000 0067 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0068 TIMSK=0x00;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0069 
; 0000 006A // USART initialization
; 0000 006B // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 006C // USART Receiver: Off
; 0000 006D // USART Transmitter: On
; 0000 006E // USART Mode: Asynchronous
; 0000 006F // USART Baud Rate: 19200
; 0000 0070 UCSRA=0x00;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0071 UCSRB=0x08;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0072 UCSRC=0x86;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0073 UBRRH=0x00;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0074 UBRRL=0x2F;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0075 
; 0000 0076 // Analog Comparator initialization
; 0000 0077 // Analog Comparator: Off
; 0000 0078 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0079 ACSR=0x80;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 007A SFIOR=0x00;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 007B 
; 0000 007C // ADC initialization
; 0000 007D // ADC disabled
; 0000 007E ADCSRA=0x00;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 007F 
; 0000 0080 // SPI initialization
; 0000 0081 // SPI disabled
; 0000 0082 SPCR=0x00;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0083 
; 0000 0084 // TWI initialization
; 0000 0085 // TWI disabled
; 0000 0086 TWCR=0x00;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0087 
; 0000 0088 while (1)
;PCODE: $00000053 VOL: 0
; 0000 0089 {
; 0000 008A // Place your code here
; 0000 008B if (PIND.1)
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 008C {
; 0000 008D cont = cont + 1;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 008E printf("Numero de pessoas no interior: = %d.\r\n",cont);
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 008F 
; 0000 0090 };
;PCODE: $00000064 VOL: 0
; 0000 0091 
; 0000 0092 delay_ms(500); // Aguarda 500 milisegundos
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0093 
; 0000 0094 if (PIND.2)
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0095 {
; 0000 0096 if(cont == 0)
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0097 {
; 0000 0098 printf("Ambiente vazio \r\n");
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0099 }
; 0000 009A 
; 0000 009B else
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 009C {
; 0000 009D cont = cont - 1;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 009E printf("Numero de pessoas no interior: = %d.\r\n",cont);
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 009F }
;PCODE: $00000082 VOL: 0
; 0000 00A0 
; 0000 00A1 
; 0000 00A2 };
;PCODE: $00000083 VOL: 0
; 0000 00A3 }
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 00A4 }
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
